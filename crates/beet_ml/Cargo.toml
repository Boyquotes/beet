[package]
name = "beet_ml"
version.workspace = true
edition.workspace = true
description.workspace = true
documentation.workspace = true
homepage.workspace = true
repository.workspace = true
license.workspace = true
keywords.workspace = true
categories.workspace = true

[features]
default = ["beet_core", "beetmash"]
beet_core = ["dep:beet_core"]
beetmash = ["dep:beetmash"]

# tokio = ["dep:tokio"]

[dependencies]
beet_ecs.workspace = true
beet_core = { workspace = true, optional = true }
beetmash = { workspace = true, optional = true }

futures = "0.3.30"
thiserror.workspace = true
anyhow.workspace = true
log.workspace = true
bevy.workspace = true
ron.workspace = true
serde.workspace = true
serde_json.workspace = true
forky_core.workspace = true
rand.workspace = true
strum.workspace = true
strum_macros.workspace = true

### huggingface ###
candle-core = "0.5.0"
candle-transformers = "0.5.0"
candle-nn = "0.5.0"
tokenizers = { version = "0.19.1", default-features = false, features = [
	"unstable_wasm",
] }
[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
hf-hub = "0.3.2"

### web ###
[target.'cfg(target_arch = "wasm32")'.dependencies]
forky_web.workspace = true
console_log.workspace = true
js-sys.workspace = true
web-sys.workspace = true
wasm-bindgen.workspace = true
wasm-bindgen-futures.workspace = true
console_error_panic_hook.workspace = true

[dev-dependencies]
beet_ecs = { workspace = true, features = ["test"] }
pretty_env_logger.workspace = true
sweet.workspace = true

[target.'cfg(not(target_arch = "wasm32"))'.dev-dependencies]
tokio.workspace = true


[[package.metadata.project]]
name = "hello-llm"
description = "A behavior that uses a Sentence Selector to score child behaviors, deciding which will run next."
thumb-url = "https://storage.googleapis.com/beet-examples/screenshots/hello-llm.png"
scene.path = "scenes/hello-llm.ron"
scene.dependencies = ["beet-debug", "camera-2d", "ui-terminal"]

[[package.metadata.project]]
name = "fetch-npc"
description = "The fetch character that will interact with the player."
thumb-url = "https://storage.googleapis.com/beet-examples/screenshots/fetch.png"
scene.path = "scenes/fetch-npc.ron"
app = "app-full"

[[package.metadata.project]]
name = "fetch-scene"
thumb-text = "üè†"
description = "A camera and the items that the fetch character can go to."
scene.path = "scenes/fetch-scene.ron"

[[package.metadata.project]]
name = "fetch"
description = "Combining LLM, steering and animation behaviors."
scene.path = "scenes/fetch.ron"
scene.dependencies = [
	"beet-debug",
	"fetch-scene",
	"ui-terminal-input",
	"lighting-3d",
	"ground-3d",
	"fetch-npc",
]
events.playerMessage.initial = "I'm hungry!"

[[package.metadata.project]]
name = "frozen-lake-scene"
thumb-text = "‚ùÑÔ∏è"
description = "The static scene for the frozen lake environment."
scene.path = "scenes/frozen-lake-scene.ron"


[[package.metadata.project]]
name = "train"
description = "Train a Q-learning agent to navigate the frozen lake environment."
thumb-url = "https://storage.googleapis.com/beet-examples/screenshots/frozen-lake-run.png"
scene.path = "scenes/frozen-lake-train.ron"
scene.dependencies = [
	"beet-debug",
	"frozen-lake-scene",
	"ui-terminal",
	"lighting-3d",
]

[[package.metadata.project]]
name = "infer"
description = "Use a trained Q-learning agent to navigate the frozen lake environment."
thumb-url = "https://storage.googleapis.com/beet-examples/screenshots/frozen-lake-run.png"
scene.path = "scenes/frozen-lake-run.ron"
scene.dependencies = [
	"beet-debug",
	"frozen-lake-scene",
	"ui-terminal",
	"lighting-3d",
]
